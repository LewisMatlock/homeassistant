blueprint:
  name: Automatic air conditioner for winter and summer, monitoring presence, time slot.
  description:  "`- Version: 1.0 -`\n\n This blueprint is for using the air conditioner automatically in both winter and summer, based on a start and end temperature. 

          Optionally, you can enable:

          - Home presence control 
          
          - Notifications
          
          - Decide on the time slot for operation"


  domain: automation
  input:

    language:
      name: Select language
      description: 'Select the language for the text of notifications.'
      default: English
      selector:
        select:
          mode: dropdown
          options:
            - English
  
    hvac_modes:
      name: Hvac modes
      description: 'Select the mode to be set to the air conditioner.'
      default: cool
      selector:
        select:
          mode: dropdown
          options:
            - heat
            - cool

    climate:
      name: Thermostat Entity
      description: 'Select thermostat to configure.'
      selector:
        entity:
          domain: climate

    secondary_temperature_sensor:
      name: Secondary Temperature Sensor
      description: 'Select temperature sensor as the primary sensor to be used by the thermostat.'
      selector:
        entity:
          domain: sensor

    temperature_trigger_selector:
      name: Temperature Sensor Trigger
      description: 'Select the temperature sensor to trigger automation.'
      default: cool
      selector:
        select:
          mode: dropdown
          options:
            - Thermostat
            - Sensor

    set_temperature_climate:
      name: Set temperature climate
      default: 78
      description: 'Select the temperature to be set at climate.'
      selector:
        number:
          min: 60
          max: 85
          unit_of_measurement: 째F
          mode: slider
          step: 1

    presence_home:
      name: Presence Home
      description: 'Select the group consisting of person.'
      default: group.presence_home_disabled
      selector:
        entity:
          domain: group
          multiple: true

    target_temperature_start:
      name: Target temperature start
      default: 78
      description: 'Set the target temperature to startup the Thermostat.'
      selector:
        number:
          min: 60
          max: 85
          unit_of_measurement: 째F
          mode: slider
          step: 1

    target_temperature_stop:
      name: Target temperature stop
      default: 76
      description: 'Set the target temperature to shutdown the Thermostat.'
      selector:
        number:
          min: 60
          max: 85
          unit_of_measurement: 째F
          mode: slider
          step: 1

    delay_temperature_stop:
      default: 10
      name: Delay temperature stop
      description: 'Set the climate shutdown delay since the target temperature has been reached.'
      selector:
        number:
          min: 0
          max: 30
          unit_of_measurement: min
          mode: slider
          step: 1

    outside_temperature_stop:
      name: Outside temperature stop
      default: 74
      description: 'Set the outside air temperature to shutdown the Thermostat.'
      selector:
        number:
          min: 60
          max: 90
          unit_of_measurement: 째F
          mode: slider
          step: 1

    notify_device:
      name: Device to notify push
      default: false
      description: 'Device needs to run the official Home Assistant app to receive notifications.'
      selector:
        device: 
          integration: mobile_app

mode: parallel
variables:
  target_temperature_start: !input target_temperature_start
  climate: !input climate
  target_temperature_stop: !input target_temperature_stop
  presence_home: !input presence_home
  outside_temperature_stop: !input outside_temperature_stop
  secondary_temperature_sensor: !input secondary_temperature_sensor
  temperature_trigger_selector: !input temperature_trigger_selector
trigger:
- platform: numeric_state
  entity_id: !input climate
  attribute: current_temperature
  above: !input target_temperature_start
  id: climate_on
- platform: numeric_state 
  entity_id: !input climate
  attribute: current_temperature 
  below: !input target_temperature_start
  id: climate_on
- platform: numeric_state
  entity_id: !input climate
  attribute: current_temperature 
  below: !input target_temperature_stop
  for: 
    minutes: !input delay_temperature_stop
  id: climate_off
- platform: numeric_state
  entity_id: !input climate
  attribute: current_temperature
  above: !input outside_temperature_stop
  id: climate_off
- platform: numeric_state
  entity_id: !input climate
  attribute: current_temperature 
  above: !input target_temperature_stop
  for: 
    minutes: !input delay_temperature_stop
  id: climate_off
- platform: state
  entity_id: !input presence_home
  from: 
      - not_home
      - home
  to: 
      - not_home
      - home
  id: presence_home
action:
- alias: climate
  if:
    - or:
      - "{{ temperature_trigger_selector == 'Thermostat' and (state_attr(climate,'current_temperature')|float(0) < target_temperature_stop|float(0) )}}"
      - "{{ temperature_trigger_selector == 'Sensor' and (state_attr(secondary_temperature_sensor,'temperature')|float(0) < target_temperature_stop|float(0) )}}"
  then:
      - service: climate.turn_off
        target:
          entity_id: !input climate
      - domain: mobile_app
        type: notify
        device_id: !input notify_device
        title: "AIR CONDITIONER."
        message: "{% if (trigger.id == 'climate_off' or trigger.id == 'presence_home')%} Automatic air conditioner shutdown.
                  {% endif %}"